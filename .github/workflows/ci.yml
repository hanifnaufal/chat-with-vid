name: Continuous Integration

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - 'apps/web/**'
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - 'apps/web/**'

jobs:
  backend-ci:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.changed_files.*.filename, 'apps/api/')) }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/api

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        pip install poetry

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ./apps/api/.venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: |
        poetry install

    - name: Run Ruff linting
      run: |
        poetry run ruff check .

    - name: Run Black formatting
      run: |
        poetry run black --check .

    - name: Run tests
      run: |
        poetry run pytest

  frontend-ci:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.changed_files.*.filename, 'apps/web/')) }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/web

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
        cache-dependency-path: ./apps/web/package-lock.json

    - name: Install dependencies
      run: |
        npm ci

    - name: Run ESLint
      run: |
        npm run lint

    - name: Run tests
      run: |
        npm test